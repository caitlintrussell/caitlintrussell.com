{"version":3,"sources":["components/header/nametrans.svg","components/header/divider.svg","components/about/self.jpg","components/about/caitlin_trussell_resume.pdf","components/divider/index.jsx","components/about/index.jsx","components/header/index.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Divider","className","About","src","self","alt","href","target","aria-label","resume","Header","logo","divider","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qD,mOCW5BC,G,MANC,WACd,OACE,yBAAKC,UAAU,c,gCCiCJC,G,MAlCD,kBACZ,yBAAKD,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKE,IAAKC,IAAMH,UAAU,wBAAwBI,IAAI,6CAExD,yBAAKJ,UAAU,cACb,yCACA,iEAGA,+UAIA,6BACA,2BACE,uBAAGK,KAAK,qCAAqCC,OAAO,SAClD,uBAAGC,aAAW,0BAA0BP,UAAU,+BAEpD,uBACEK,KAAK,+CACLC,OAAO,SAEP,uBAAGC,aAAW,4BAA6BP,UAAU,iCAEvD,uBAAGK,KAAK,6BAA6BC,OAAO,SAC1C,uBAAGC,aAAW,mBAAmBP,UAAU,iCAE7C,uBAAGK,KAAMG,KAAT,UCbOC,EAbA,WACb,OAAO,oCACL,yBAAKT,UAAU,UACb,yBAAKA,UAAU,SACb,yBAAKE,IAAKQ,IAAMV,UAAU,iBAAiBI,IAAI,0BAC/C,yBAAMF,IAAKS,IAASX,UAAU,iBAAiBI,IAAI,OAGvD,kBAAC,EAAD,MACA,kBAAC,EAAD,QCTWQ,EALH,WACV,OACM,kBAAC,EAAD,OCKFC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MCzEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP5B,IAiDV,SAAiCO,GAE/BwB,MAAMxB,GACHI,MAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEArEAoB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,OCzCxBkC,K","file":"static/js/main.d6ff3d84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nametrans.330e8133.svg\";","module.exports = __webpack_public_path__ + \"static/media/divider.d223d1ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/self.12732104.jpg\";","module.exports = __webpack_public_path__ + \"static/media/caitlin_trussell_resume.f0bb8c9b.pdf\";","\n\nimport React from 'react';\nimport './divider.css';\n\nconst Divider = () => {\n  return (\n    <div className=\"Divider\" />\n  )\n}\n\nexport default Divider;\n","import React from 'react';\nimport self from './self.jpg';\nimport resume from './caitlin_trussell_resume.pdf';\n\nimport './about.css';\n\nconst About = () => (\n  <div className=\"Main\">\n    <div className=\"About-img\">\n      <img src={self} className=\"img-responsive Selfie\" alt=\"Caitlin standing underneath mayan ruins\" />\n    </div>\n    <div className=\"About-text\">\n      <h2>Hi there!</h2>\n      <h3>\n        I'm Caitlin, a software engineer.\n      </h3>\n      <p>\n        I live in San Diego, CA and sometimes find myself at the foot of ancient\n        ruins. I make user interfaces for the web with React and friends. When I'm not writing code, I'm probably hanging out with my dog, trying to keep my plants alive or watching Star Trek NextGen for the 50th time. Thanks for visiting!\n      </p>\n      <br />\n      <p>\n        <a href=\"https://github.com/caitlintrussell\" target=\"blank\">\n          <i aria-label=\"visit my github profile\" className=\"glyph fab fa-github fa-lg\" />\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/caitlintrussell/\"\n          target=\"blank\"\n        >\n          <i aria-label=\"visit my LinkedIn profile\"  className=\"glyph fab fa-linkedin fa-lg\" />\n        </a>\n        <a href=\"mailto:caitlintrussell.com\" target=\"blank\">\n          <i aria-label=\"send me an email\" className=\"glyph fas fa-envelope fa-lg\"/>\n        </a>\n        <a href={resume}> </a>\n      </p>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\n\nimport './header.css';\nimport logo from './nametrans.svg';\nimport divider from './divider.svg';\nimport Divider from '../divider';\nimport About from '../about';\n\nconst Header = () => {\n  return <>\n    <div className=\"Header\">\n      <div className=\"Title\">\n        <img src={logo} className=\"img-responsive\" alt=\"Caitlin Trussell Logo\"/>\n        <img  src={divider} className=\"img-responsive\" alt=\"\"/>\n      </div>\n    </div>\n    <Divider />\n    <About/>\n    </>\n};\n\nexport default Header;\n","import React from 'react';\nimport Main from './components/header';\n\nconst App = () => {\n  return (\n        <Main />\n    );\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}